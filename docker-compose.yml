version: '3.8'

services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: todo_db
      POSTGRES_USER: sahan
      POSTGRES_PASSWORD: sahan
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - todo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sahan -d todo_db"]
      interval: 5s
      retries: 5
      timeout: 3s

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5005:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=todo_db;Username=sahan;Password=sahan
    command: >
      sh -c "until dotnet ef database update; do echo 'Waiting for DB...'; sleep 5; done && dotnet MyBackend.dll"
    networks:
      - todo_network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - todo_network

volumes:
  postgres_data:

networks:
  todo_network:











# version: '3.8'

# services:
#   db:
#     image: postgres:16
#     container_name: postgres_db
#     restart: always
#     environment:
#       POSTGRES_DB: todo_db
#       POSTGRES_USER: sahan
#       POSTGRES_PASSWORD: sahan
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     networks:
#       - todo_network

#   backend:
#     build:
#       context: ./Backend
#       dockerfile: Dockerfile
#     container_name: todo_backend
#     restart: always
#     depends_on:
#       - db
#     ports:
#       - "5005:8080"
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#       - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=todo_db;Username=sahan;Password=sahan
#     command: >
#       sh -c "sleep 5 && dotnet ef database update && dotnet MyBackend.dll"
#     networks:
#       - todo_network

#   frontend:
#     build:
#       context: ./Frontend
#       dockerfile: Dockerfile
#     container_name: todo_frontend
#     restart: always
#     depends_on:
#       - backend
#     ports:
#       - "3000:80"
#     networks:
#       - todo_network

# volumes:
#   postgres_data:

# networks:
#   todo_network:
